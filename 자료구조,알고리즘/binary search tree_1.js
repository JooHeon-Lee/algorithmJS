/**
 * 이진 검색 트리
 * -> 현재 노드보다 작은건 왼쪽 큰 거는 오른쪽.
 * 
 * Big O
 * 검색,삽입,삭제 : O(log n)
 * 삽입 : 최 상위 노드 부터 추가 하는 값(x) 과 크기 비교 -> 작으면 왼쪽 자식 노드 위치 크면 우측 자식 노드 위치로 이동. 자식 노드가 없으면 x 추가
 * 검색 : 삽입과 동일하게 최상위 노드부터 자식노드로 내려가면서 값 비교
 * 삭제 : case 1) 자식 노드가 없을 때         : 그냥 삭제 하면됨
 *        case 2) 자식 노드가 하나 존재 할 때 : 삭제 시켜주고 할아버지 노드와 연결
 *        case 3) 자식 노드가 많을 때         :  우측 서브트리에서 가장 왼쪽 자식 값을 삭제하고자 하는 값과 바꿔 주면 됨.
 */

